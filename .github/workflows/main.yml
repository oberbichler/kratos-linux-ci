name: CI

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: oberbichler/kratos-dev:latest
      env:
        CCACHE_SLOPPINESS: pch_defines,time_macros
        CCACHE_COMPILERCHECK: content
        CCACHE_COMPRESS: true
        CCACHE_NODISABLE: true
        CCACHE_MAXSIZE: 500M
        FC: gfortran-7
        CC: /usr/lib/ccache/gcc
        CXX: /usr/lib/ccache/g++

    steps:
    - uses: actions/checkout@v2-beta
      with:
        repository: KratosMultiphysics/Kratos
    - name: Cache Build
      id: cache-build
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-
    - name: Build
      run: |
        export PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}/bin/Custom
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/bin/Custom/libs

        add_app () {
            export KRATOS_APPLICATIONS="${KRATOS_APPLICATIONS}$1;"
        }

        # Set variables
        export KRATOS_SOURCE="${KRATOS_SOURCE:-${PWD}}"
        export KRATOS_BUILD="${KRATOS_SOURCE}/build"
        export KRATOS_APP_DIR="${KRATOS_SOURCE}/applications"

        # Set build type
        export KRATOS_BUILD_TYPE=${KRATOS_BUILD_TYPE:="Custom"}
        export PYTHON_EXECUTABLE="/usr/bin/python3.6"
        export KRATOS_INSTALL_PYTHON_USING_LINKS=ON

        # Set applications to compile
        add_app ${KRATOS_APP_DIR}/ExternalSolversApplication;
        add_app ${KRATOS_APP_DIR}/StructuralMechanicsApplication;
        add_app ${KRATOS_APP_DIR}/FluidDynamicsApplication;
        add_app ${KRATOS_APP_DIR}/MeshMovingApplication;
        add_app ${KRATOS_APP_DIR}/DEMApplication;
        add_app ${KRATOS_APP_DIR}/CSharpWrapperApplication;
        add_app ${KRATOS_APP_DIR}/MetisApplication;
        add_app ${KRATOS_APP_DIR}/TrilinosApplication;

        # Clean
        clear
        rm -rf "${KRATOS_BUILD}/${KRATOS_BUILD_TYPE}/cmake_install.cmake"
        rm -rf "${KRATOS_BUILD}/${KRATOS_BUILD_TYPE}/CMakeCache.txt"
        rm -rf "${KRATOS_BUILD}/${KRATOS_BUILD_TYPE}/CMakeFiles"

        echo "Kratos build type is ${KRATOS_BUILD_TYPE}"

        # Configure
        cmake -GNinja -H"${KRATOS_SOURCE}" -B"${KRATOS_BUILD}/${KRATOS_BUILD_TYPE}" \
        -DUSE_MPI=ON \
        -DPYBIND11_PYTHON_VERSION="3.6" \
        -DCMAKE_CXX_FLAGS="-O0 -fopenmp -Wall \
        -Wignored-qualifiers -Werror=ignored-qualifiers -Werror=suggest-override -Werror=unused-variable \
        -Werror=misleading-indentation -Werror=return-type \
        -Werror=sign-compare -Werror=unused-but-set-variable \
        -Werror=unused-local-typedefs -Werror=reorder -Werror=maybe-uninitialized" \
        -DTRILINOS_INCLUDE_DIR="/usr/include/trilinos" \
        -DTRILINOS_LIBRARY_DIR="/usr/lib/x86_64-linux-gnu" \
        -DTRILINOS_LIBRARY_PREFIX="trilinos_" \
        -DUSE_COTIRE=ON

        # Buid
        cd "${KRATOS_BUILD}/${KRATOS_BUILD_TYPE}"
        ninja all_unity
        ninja install/fast

        python3 kratos/python_scripts/run_tests.py -l small -c python3
        ccache -s
